// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-axios';
import type { DeleteV2Data, DeleteV2Responses, DeleteV2Errors, DeleteData, DeleteResponses, DeleteErrors, GetDocumentTypesData, GetDocumentTypesResponses, GetDocumentTypesErrors, GetDocumentTypesV2Data, GetDocumentTypesV2Responses, GetDocumentTypesV2Errors, GetFeedGeneratorsV2Data, GetFeedGeneratorsV2Responses, GetFeedGeneratorsV2Errors, GetFeedTypesData, GetFeedTypesResponses, GetFeedTypesErrors, GetDetailsData, GetDetailsResponses, GetDetailsErrors, GetDetailsV2Data, GetDetailsV2Responses, GetDetailsV2Errors, GetByStoreData, GetByStoreResponses, GetByStoreErrors, GetByStoreV2Data, GetByStoreV2Responses, GetByStoreV2Errors, GetPropertyValueExtractorsData, GetPropertyValueExtractorsResponses, GetPropertyValueExtractorsErrors, GetPropertyValueExtractorsV2Data, GetPropertyValueExtractorsV2Responses, GetPropertyValueExtractorsV2Errors, SaveData, SaveResponses, SaveErrors, SaveV2Data, SaveV2Responses, SaveV2Errors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const deleteV2 = <ThrowOnError extends boolean = false>(options?: Options<DeleteV2Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<DeleteV2Responses, DeleteV2Errors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v2/setting/delete',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers,
        },
    });
};

/**
 * @deprecated
 */
export const delete_ = <ThrowOnError extends boolean = false>(options?: Options<DeleteData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<DeleteResponses, DeleteErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v1/setting/Delete',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers,
        },
    });
};

/**
 * @deprecated
 */
export const getDocumentTypes = <ThrowOnError extends boolean = false>(options?: Options<GetDocumentTypesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetDocumentTypesResponses, GetDocumentTypesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v1/setting/documenttypes',
        ...options,
    });
};

export const getDocumentTypesV2 = <ThrowOnError extends boolean = false>(options?: Options<GetDocumentTypesV2Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetDocumentTypesV2Responses, GetDocumentTypesV2Errors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v2/setting/documenttypes',
        ...options,
    });
};

export const getFeedGeneratorsV2 = <ThrowOnError extends boolean = false>(options?: Options<GetFeedGeneratorsV2Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetFeedGeneratorsV2Responses, GetFeedGeneratorsV2Errors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v2/setting/feedgenerators',
        ...options,
    });
};

/**
 * @deprecated
 */
export const getFeedTypes = <ThrowOnError extends boolean = false>(options?: Options<GetFeedTypesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetFeedTypesResponses, GetFeedTypesErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v1/setting/feedtypes',
        ...options,
    });
};

/**
 * @deprecated
 */
export const getDetails = <ThrowOnError extends boolean = false>(options: Options<GetDetailsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDetailsResponses, GetDetailsErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v1/setting/get/{id}',
        ...options,
    });
};

export const getDetailsV2 = <ThrowOnError extends boolean = false>(options: Options<GetDetailsV2Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDetailsV2Responses, GetDetailsV2Errors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v2/setting/get/{id}',
        ...options,
    });
};

/**
 * @deprecated
 */
export const getByStore = <ThrowOnError extends boolean = false>(options: Options<GetByStoreData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetByStoreResponses, GetByStoreErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v1/setting/getbystore',
        ...options,
    });
};

export const getByStoreV2 = <ThrowOnError extends boolean = false>(options: Options<GetByStoreV2Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetByStoreV2Responses, GetByStoreV2Errors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v2/setting/getbystore',
        ...options,
    });
};

/**
 * @deprecated
 */
export const getPropertyValueExtractors = <ThrowOnError extends boolean = false>(options?: Options<GetPropertyValueExtractorsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPropertyValueExtractorsResponses, GetPropertyValueExtractorsErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v1/setting/propertyvalueextractors',
        ...options,
    });
};

export const getPropertyValueExtractorsV2 = <ThrowOnError extends boolean = false>(options?: Options<GetPropertyValueExtractorsV2Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPropertyValueExtractorsV2Responses, GetPropertyValueExtractorsV2Errors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v2/setting/propertyvalueextractors',
        ...options,
    });
};

/**
 * @deprecated
 */
export const save = <ThrowOnError extends boolean = false>(options?: Options<SaveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<SaveResponses, SaveErrors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v1/setting/save',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers,
        },
    });
};

export const saveV2 = <ThrowOnError extends boolean = false>(options?: Options<SaveV2Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<SaveV2Responses, SaveV2Errors, ThrowOnError>({
        responseType: 'json',
        security: [
            {
                scheme: 'bearer',
                type: 'http',
            },
        ],
        url: '/umbraco/ucproductfeeds/management/api/v2/setting/save',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers,
        },
    });
};